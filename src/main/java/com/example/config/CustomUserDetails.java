package com.example.config;import com.example.entity.ProfileEntity;import org.springframework.security.core.GrantedAuthority;import org.springframework.security.core.authority.SimpleGrantedAuthority;import org.springframework.security.core.userdetails.UserDetails;import java.util.Collection;import java.util.LinkedList;import java.util.List;public class CustomUserDetails implements UserDetails {    private ProfileEntity profileEntity;    public CustomUserDetails(ProfileEntity profile) {        this.profileEntity = profile;    }    @Override    public Collection<? extends GrantedAuthority> getAuthorities() {        List<GrantedAuthority> list = new LinkedList<>();        list.add(new SimpleGrantedAuthority(profileEntity.getRole().name())); // ADMIN        return list;    }    @Override    public String getPassword() {        return profileEntity.getPassword();    }    @Override    public String getUsername() {        return profileEntity.getPassword();    }    @Override    public boolean isAccountNonExpired() {        return true;    }    @Override    public boolean isAccountNonLocked() {        return true;    }    @Override    public boolean isCredentialsNonExpired() {        return true;    }    @Override    public boolean isEnabled() {        return profileEntity.getStatus()                .equals(ProfileEntity.Status.ACTIVE);    }    public ProfileEntity getProfileEntity() {        return profileEntity;    }    public void setProfileEntity(ProfileEntity profileEntity) {        this.profileEntity = profileEntity;    }}