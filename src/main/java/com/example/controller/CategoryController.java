package com.example.controller;import com.example.dto.CategoryDTO;import com.example.entity.CategoryEntity;import com.example.service.CategoryService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.domain.Page;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.security.access.prepost.PreAuthorize;import org.springframework.web.bind.annotation.*;@RestController@RequestMapping("/api/v1/category")public class CategoryController {    @Autowired    private CategoryService categoryService;    @PreAuthorize("hasRole('ADMIN')")    @PostMapping("/admin/create")    public ResponseEntity<CategoryDTO> create(@RequestBody CategoryDTO categoryDTO) {        CategoryDTO createdCategory = categoryService.create(categoryDTO);        return ResponseEntity.status(HttpStatus.CREATED).body(createdCategory);    }    @PreAuthorize("hasRole('ADMIN')")    @PutMapping("/admin/update/by-id/{id}")    public ResponseEntity<CategoryDTO> update(@PathVariable Long id,                                              @RequestBody CategoryDTO categoryDTO) {        CategoryDTO updatedCategory = categoryService.update(id, categoryDTO);        return ResponseEntity.status(HttpStatus.CREATED).body(updatedCategory);    }    @PreAuthorize("hasRole('ADMIN')")    @DeleteMapping("/admin/delete/by-id/{id}")    public ResponseEntity<String> delete(@PathVariable Long id) {        String resp = categoryService.delete(id);        return ResponseEntity.ok(resp);    }    @PreAuthorize("hasRole('ADMIN')")    @GetMapping("/admin/get/by-lang/{lang}")    public ResponseEntity<Page<CategoryDTO>> getList(@PathVariable CategoryEntity.Language lang,                                                     @RequestParam(defaultValue = "0") Integer page,                                                     @RequestParam(defaultValue = "5") Integer size) {        Page<CategoryDTO> categoryDTOPage = categoryService.getList(lang, page, size);        return ResponseEntity.ok(categoryDTOPage);    }    @GetMapping("/open/by-lang/{lang}")    public ResponseEntity<Page<CategoryDTO>> getByLang(@PathVariable CategoryEntity.Language lang,                                                       @RequestParam(defaultValue = "0") Integer page,                                                       @RequestParam(defaultValue = "5") Integer size) {        Page<CategoryDTO> categoryDTOPage = categoryService.getByLang(lang, page, size);        return ResponseEntity.ok(categoryDTOPage);    }}