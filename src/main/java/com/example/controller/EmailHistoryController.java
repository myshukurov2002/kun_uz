package com.example.controller;import com.example.dto.EmailHistoryDTO;import com.example.dto.JwtDTO;import com.example.entity.ProfileEntity;import com.example.service.EmailHistoryService;import com.example.util.SecurityUtil;import jakarta.servlet.http.HttpServletRequest;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.domain.Page;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import java.time.LocalDate;import java.util.List;@RestController@RequestMapping("api/v1/email-history")public class EmailHistoryController {    @Autowired    private EmailHistoryService emailHistoryService;    @GetMapping("/admin/by-email/{email}")    public ResponseEntity<?> getByEmail(@PathVariable String email,                                        HttpServletRequest request) {        JwtDTO jwtDTO = SecurityUtil.hasRole(request, ProfileEntity.Role.ROLE_ADMIN);        List<EmailHistoryDTO> emailHistoryDTOList = emailHistoryService.getByEmail(email);        return ResponseEntity.ok(emailHistoryDTOList);    }    @GetMapping("/admin/by-id/{id}")    public ResponseEntity<?> getById(@PathVariable String id,                                     HttpServletRequest request) {        JwtDTO jwtDTO = SecurityUtil.hasRole(request, ProfileEntity.Role.ROLE_ADMIN);        EmailHistoryDTO byId = emailHistoryService.getById(id);        return ResponseEntity.ok(byId);    }    @GetMapping("/admin/by-message/{message}")    public ResponseEntity<?> getByMessage(@PathVariable String message,                                          HttpServletRequest request) {        JwtDTO jwtDTO = SecurityUtil.hasRole(request, ProfileEntity.Role.ROLE_ADMIN);        List<EmailHistoryDTO> emailHistoryDTOList = emailHistoryService                .getByMessage(message);        return ResponseEntity.ok(emailHistoryDTOList);    }    @GetMapping("/admin/by-date/{date}")    public ResponseEntity<?> getByDate(@PathVariable LocalDate date,                                       HttpServletRequest request) {        JwtDTO jwtDTO = SecurityUtil.hasRole(request, ProfileEntity.Role.ROLE_ADMIN);        List<EmailHistoryDTO> emailHistoryDTOList = emailHistoryService.getByDate(date);        return ResponseEntity.ok(emailHistoryDTOList);    }    @GetMapping("/admin/by-given-date/{from}-{to}")    public ResponseEntity<?> getByGivenDate(@PathVariable LocalDate from,                                            @PathVariable LocalDate to,                                            HttpServletRequest request) {        JwtDTO jwtDTO = SecurityUtil.hasRole(request, ProfileEntity.Role.ROLE_ADMIN);        List<EmailHistoryDTO> emailHistoryDTOList = emailHistoryService.getByGivenDate(from, to);        return ResponseEntity.ok(emailHistoryDTOList);    }    @GetMapping("/admin/paging/by-id/{id}")    public ResponseEntity<Page<EmailHistoryDTO>> pagingById(@PathVariable String id,                                                            @RequestParam(defaultValue = "0") Integer page,                                                            @RequestParam(defaultValue = "10") Integer size) {        Page<EmailHistoryDTO> dtoPage = emailHistoryService.pagingById(id, page, size);        return ResponseEntity.ok(dtoPage);    }    @GetMapping("/admin/paging/by-email/{email}")    public ResponseEntity<Page<EmailHistoryDTO>> pagingByEmail(@PathVariable String email,                                                               @RequestParam(defaultValue = "0") Integer page,                                                               @RequestParam(defaultValue = "10") Integer size) {        Page<EmailHistoryDTO> dtoPage = emailHistoryService.pagingByEmail(email, page, size);        return ResponseEntity.ok(dtoPage);    }    @GetMapping("/admin/paging/by-between-date/{from}-{to}")    public ResponseEntity<Page<EmailHistoryDTO>> pagingByCreatedDateBetween(@PathVariable LocalDate fromDate,                                                                            @PathVariable LocalDate toDate,                                                                            @RequestParam(defaultValue = "0") Integer page,                                                                            @RequestParam(defaultValue = "10") Integer size) {        Page<EmailHistoryDTO> dtoPage = emailHistoryService.pagingByCreatedDateBetween(fromDate, toDate, page, size);        return ResponseEntity.ok(dtoPage);    }}